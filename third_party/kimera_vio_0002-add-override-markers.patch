diff --git a/include/kimera-vio/dataprovider/MonoDataProviderModule.h b/include/kimera-vio/dataprovider/MonoDataProviderModule.h
index 6c3b3a0e..23849b7f 100644
--- a/include/kimera-vio/dataprovider/MonoDataProviderModule.h
+++ b/include/kimera-vio/dataprovider/MonoDataProviderModule.h
@@ -100,7 +100,7 @@ class MonoDataProviderModule : public DataProviderModule {
   virtual void shutdownQueues() override;
 
   //! Checks if the module has work to do (should check input queues are empty)
-  virtual inline bool hasWork() const { return !left_frame_queue_.empty(); }
+  virtual inline bool hasWork() const override { return !left_frame_queue_.empty(); }
 
  protected:
   //! Input data
diff --git a/include/kimera-vio/frontend/optical-flow/OpticalFlowPredictor.h b/include/kimera-vio/frontend/optical-flow/OpticalFlowPredictor.h
index 3ff1ee77..8957eb51 100644
--- a/include/kimera-vio/frontend/optical-flow/OpticalFlowPredictor.h
+++ b/include/kimera-vio/frontend/optical-flow/OpticalFlowPredictor.h
@@ -63,7 +63,7 @@ class NoOpticalFlowPredictor : public OpticalFlowPredictor {
   bool predictSparseFlow(const KeypointsCV& prev_kps,
                          const gtsam::Rot3& /* inter_frame */,
                          KeypointsCV* next_kps) override;
-  cv::Mat predictDenseFlow(const gtsam::Rot3& cam1_R_cam2) { return cv::Mat(); }
+  cv::Mat predictDenseFlow(const gtsam::Rot3& cam1_R_cam2) override { return cv::Mat(); }
 };
 
 /**
