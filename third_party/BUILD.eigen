
cc_library(
  name = "eigen",
  visibility=["//visibility:public"],
  hdrs = [
    "Eigen/Cholesky",
    "Eigen/CholmodSupport",
    "Eigen/Core",
    "Eigen/Dense",
    "Eigen/Eigen",
    "Eigen/Eigenvalues",
    "Eigen/Geometry",
    "Eigen/Householder",
    "Eigen/IterativeLinearSolvers",
    "Eigen/Jacobi",
    "Eigen/KLUSupport",
    "Eigen/LU",
    "Eigen/MetisSupport",
    "Eigen/OrderingMethods",
    "Eigen/PardisoSupport",
    "Eigen/PaStiXSupport",
    "Eigen/QR",
    "Eigen/QtAlignedMalloc",
    "Eigen/Sparse",
    "Eigen/SparseCholesky",
    "Eigen/SparseCore",
    "Eigen/SparseLU",
    "Eigen/SparseQR",
    "Eigen/SPQRSupport",
    "Eigen/StdDeque",
    "Eigen/StdList",
    "Eigen/StdVector",
    "Eigen/SuperLUSupport",
    "Eigen/SVD",
    "Eigen/UmfPackSupport",
  ],
  srcs = glob(["Eigen/src/**/*"]),
  # Other third party dependencies often pull in Eigen using angle brackets
  # This makes it so that Eigen is available at both "Eigen/Core" and <Eigen/Core>
  includes=[""],
)

cc_library(
  name = "eigen_unsupported",
  visibility=["//visibility:public"],
  hdrs = [
    "unsupported/Eigen/AutoDiff",
    "unsupported/Eigen/Polynomials",
  ],
  srcs = [
    "unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h",
    "unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h",
    "unsupported/Eigen/src/Polynomials/Companion.h",
    "unsupported/Eigen/src/Polynomials/PolynomialUtils.h",
    "unsupported/Eigen/src/Polynomials/PolynomialSolver.h",
  ],
  deps = [
    ":eigen",
  ]
)
