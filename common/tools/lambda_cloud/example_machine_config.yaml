# Example machine configuration for Lambda Cloud training jobs
# Copy and modify this file for your specific setup

# Lambda Cloud instance types with their preferred regions
machine_types:
  gpu_1x_gh200:  # Preferred GPU type
    - us-east-3  # Primary region
    # supports fallback regions, e.g., us-west-2
  # supports multiple machine types, from preferred to fallback
# SSH key name registered with Lambda Cloud
ssh_key: aspen

# Image family to use for instances
image_family: lambda-stack-24-04

# File systems to mount (default: vigor dataset)
file_systems:
  - vigor

# Files to copy from local machine to remote instance
files_to_copy:
  # Copy torch model cache (adjust path as needed)
  ~/.cache/torch/hub/checkpoints: /home/ubuntu/.cache/torch/hub/checkpoints
  ~/.cache/robot/overhead_matching/tensor_cache: /home/ubuntu/.cache/robot/overhead_matching/tensor_cache
  ~/.aws/credentials: ~/.aws/credentials
  
  # Copy tmux configuration
  ~/.tmux.conf: ~/.tmux.conf

# Commands to run on the remote instance during setup
# Note: Repository cloning and setup.sh are handled automatically
remote_setup_commands:
  # vigor datasets
  - mkdir /tmp/Chicago
  - cp /home/ubuntu/vigor/Chicago/*.tar.gz /tmp/Chicago/
  - cp /home/ubuntu/vigor/Chicago/*.geojson /tmp/Chicago/
  - tar -xzf /tmp/Chicago/panorama.tar.gz -C /tmp/Chicago/
  - tar -xzf /tmp/Chicago/satellite.tar.gz -C /tmp/Chicago/
  - mkdir /tmp/Seattle
  - cp /home/ubuntu/vigor/Seattle/*.tar.gz /tmp/Seattle/
  - cp /home/ubuntu/vigor/Seattle/*.geojson /tmp/Seattle/
  - tar -xzf /tmp/Seattle/panorama.tar.gz -C /tmp/Seattle/
  - tar -xzf /tmp/Seattle/satellite.tar.gz -C /tmp/Seattle/
  # Alphaearth
  - cp -r /home/ubuntu/vigor/alphaearth /tmp/

# Maximum training time in hours (jobs will be terminated after this time)
max_train_time_hours: 6