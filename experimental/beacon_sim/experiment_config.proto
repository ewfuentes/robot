
syntax = "proto3";

package robot.experimental.beacon_sim.proto;

message ExpectedDeterminant {}

message ValueAtRiskDeterminant {
  double percentile = 1;
}

message ProbMassInRegion {
  double position_x_half_width_m = 1;
  double position_y_half_width_m = 2;
  double heading_half_width_rad = 3;
}

message UncertaintySize {
  oneof uncertainty_size_oneof {
    ExpectedDeterminant expected_determinant = 1;
    ValueAtRiskDeterminant value_at_risk_determinant = 2;
    ProbMassInRegion prob_mass_in_region = 3;
  }
}

message LandmarkBRMPlanner {
  optional int32 max_num_components = 1;
  UncertaintySize uncertainty_size = 2;
}

message ExpectedBRMPlanner {
  int32 num_configuration_samples = 1;
}

message OptimisticBRMPlanner {
}

message DavidPlanner {
  double favor_goal = 1;
  int32 max_visits = 2;
  int32 max_plans = 3;
}
// NEXT ID: 6
message PlannerConfig {
  string name = 1;
  oneof planner_config_oneof {
    LandmarkBRMPlanner landmark_brm_config = 2;
    ExpectedBRMPlanner expected_brm_config = 3;
    OptimisticBRMPlanner optimistic_brm_config = 4;
    DavidPlanner david_planner_config = 5;
  };
}

// NEXT ID: 13
message ExperimentConfig {
  string name = 1;
  // Note that these paths are relative to the current experiment_config
  string map_config_path = 2;
  string ekf_state_path = 3;
  string road_map_path = 4;
  int32 start_goal_seed = 5;
  double start_goal_connection_radius_m = 8;
  // The number of start goal pairs that we will evaluate
  int32 num_trials = 6;
  int32 evaluation_base_seed = 10;
  // The number of elements in the sample expectation for each trial
  int32 num_eval_trials = 11;
  double max_sensor_range_m = 12;
  optional double plan_timeout_s = 9;
  repeated PlannerConfig planner_configs = 7;
}

